<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Documents" script:language="StarBasic" script:moduleType="normal">sub saveAndreload()
	rem ----------------------------------------------------------------------
	rem define variables
	dim document   as object
	dim dispatcher as object
	rem ----------------------------------------------------------------------
	rem get access to the document
	document   = ThisComponent.CurrentController.Frame
	dispatcher = createUnoService("com.sun.star.frame.DispatchHelper")
	dispatcher.executeDispatch(document, ".uno:Save", "", 0, Array())
	dispatcher.executeDispatch(document, ".uno:Reload", "", 0, Array())

end Sub

sub saveDocument()
	rem ----------------------------------------------------------------------
	rem define variables
	dim document   as object
	dim dispatcher as object
	rem ----------------------------------------------------------------------
	rem get access to the document
	document   = ThisComponent.CurrentController.Frame
	dispatcher = createUnoService("com.sun.star.frame.DispatchHelper")
	dispatcher.executeDispatch(document, ".uno:Save", "", 0, Array())

end Sub

sub reloadDocument()
	rem ----------------------------------------------------------------------
	rem define variables
	dim document   as object
	dim dispatcher as object
	rem ----------------------------------------------------------------------
	rem get access to the document
	document   = ThisComponent.CurrentController.Frame
	dispatcher = createUnoService("com.sun.star.frame.DispatchHelper")
	dispatcher.executeDispatch(document, ".uno:Reload", "", 0, Array())

end Sub
Sub setDimensions
	Dim oStyles As Object
	Dim curStyle As Object
	Dim inputHeight As String
	Dim inputTopMargin As String
	Dim inputBottomMargin As String
	Dim inputLeftMargin As String
	Dim inputRightMargin As String
	
	Dim newWidth As Long
	Dim newHeight As Long
	Dim newTopMargin As Long
	Dim newBottomMargin As Long
	Dim newLeftMargin As Long
	Dim newRightMargin As Long
	Dim textFieldHeight As Long
	Dim textFieldWidth As Long
	
	oStyles =  ThisComponent.StyleFamilies.getByName("PageStyles")
	inputWidth = InputBox("Введите ширину страниц (в мм):", "Установка ширины всех страниц документа", "")
	inputHeight = InputBox("Введите высоту страниц (в мм):", "Установка высоты всех страниц документа", "")
	inputTopMargin = InputBox("Введите размер верхнего поля (в мм):", "Установка размера верхнего поля для всех страниц", "")
	inputBottomMargin = InputBox("Введите резмер нижнего поля (в мм):", "Установка размера нижнего поля для всех страниц", "")
	inputLeftMargin = InputBox("Введите размер левого поля (в мм):", "Установка размера левого поля для всех страниц", "")
	inputRightMargin = InputBox("Введите размер правого поля (в мм):", "Установка размера правого поля для всех страниц", "")

	For i = 0  to oStyles.Count - 1
		curStyle = oStyles.getByIndex(i)
		newWidth = curStyle.Width
		newHeight = curStyle.height
		newTopMargin = curStyle.TopMargin
		newBottomMargin = curStyle.BottomMargin
		newLeftMargin = curStyle.LeftMargin
		newRightMargin = curStyle.RightMargin
		
		If curstyle.IsLandscape Then
			If CLng(inputHeight) &gt; 0 Then
				newWidth = CLng(inputHeight + "00")
			EndIf
			If CLng(inputWidth) &gt; 0 Then
				newHeight = CLng(inputWidth + "00")
			EndIf
			
			If CLng(inputLeftMargin) &gt; 0 Then
				newTopMargin = CLng(inputLeftMargin + "00")
			EndIf
			If CLng(inputRightMargin) &gt; 0 Then
				newBottomMargin = CLng(inputRightMargin + "00")
			EndIf
			If CLng(inputTopMargin) &gt; 0 Then
				newLeftMargin = CLng(inputTopMargin + "00")
			EndIf
			If CLng(inputBottomMargin) &gt; 0 Then
				newRightMargin = CLng(inputBottomMargin + "00")
			EndIf

		Else
			If CLng(inputWidth) &gt; 0 Then
				newWidth = CLng(inputWidth + "00")
			EndIf
			If CLng(inputHeight) &gt; 0 Then
				newHeight = CLng(inputHeight + "00")
			EndIf
			If CLng(inputTopMargin) &gt; 0 Then
				newTopMargin = CLng(inputTopMargin + "00")
			EndIf
			If CLng(inputBottomMargin) &gt; 0 Then
				newBottomMargin = CLng(inputBottomMargin + "00")
			EndIf
			If CLng(inputLeftMargin) &gt; 0 Then
				newLeftMargin = CLng(inputLeftMargin + "00")
			EndIf
			If CLng(inputRightMargin) &gt; 0 Then
				newRightMargin = CLng(inputRightMargin + "00")
			EndIf
		End If
		textFieldWidth = newWidth - newLeftMargin - newRightMargin
		textFieldHeight = newHeight - newTopMargin - newBottomMargin
		
		If textFieldWidth &gt; 5000 Then
			curStyle.Width = newWidth
			curStyle.LeftMargin = newLeftMargin
			curStyle.RightMargin = newRightMargin
		EndIf
		
		If textFieldHeight &gt; 5000 Then
			curStyle.Height = newHeight
			curStyle.TopMargin = newTopMargin
			curStyle.BottomMargin = newBottomMargin
		EndIf
	Next
	
	Exit Sub
End Sub

Sub	setBookUniqPageStyles

	Dim firstPageName As String 
	Dim pageName As String
	Dim curPageNum As Integer
	Dim prevPageNum As String
	Dim leftPageNum As Long
	Dim docPages As Long
	Dim articlePages As Long
	Dim previousPageStyle As Object
	Dim pageStyles As Object
	Dim curPageStyle As Object
	Dim curPageStyleName As String
	Dim nextStyle As Object
	Dim clonedStyle As Object
	Dim clonedStyleName As String
	Dim oViewCursor As Object
	Dim pageNum As Integer
	oViewCursor = ThisComponent.CurrentController.getViewCursor()
	pageStyles = ThisComponent.StyleFamilies.getByName("PageStyles")
	pageNum = 1
	pageName = "Страница издания"
		
	page = findFirstPageWithStyle(pageName)
	firstPage = page
	oViewCursor.jumpToPage(page)
	curPageStyleName = oViewCursor.PageStyleName
	Do While StrComp(curPageStyleName,pageName,1) = 0
		If pageNum = 1 Then
			oViewCursor.jumpToPreviousPage()
			prevPageName = oViewCursor.PageStyleName
			previousPageStyle = pageStyles.getByName(prevPageName)
			tmpName = pageName + " "
			If InStr(prevPageName, tmpName) = 1 Then
				startNum = Right(prevPageName,Len(prevPageName) - Len(tmpName))
				pageNum =  CInt(startNum) + 1 
			EndIf
			oViewCursor.jumpToNextPage()
		EndIf
		newPageName = pageName + " " + pageNum
		
		createPageStyleByExample(newPageName)
		If pageNum = 1 Then
			oTextCursor = oViewCursor.Text.CreateTextCursorByRange(oViewCursor)
			oViewCursor.PageDescName = newPageName
			
		Else
			previousPageStyle.FollowStyle = newPageName						
		EndIf

		curPageStyle = pageStyles.getByName(newPageName)
		'Установим стиль следующей страницы в стандартное значение
		curPageStyle.FollowStyle = pageName
		previousPageStyle = curPageStyle
		oViewCursor.jumpToNextPage()
		curPageStyleName = getNextPageStyleName()
		pageNum = pageNum + 1
	Loop
End Sub
</script:module>

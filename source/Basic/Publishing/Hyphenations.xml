<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Hyphenations" script:language="StarBasic" script:moduleType="normal">Sub convertHyphInDoc()
	Dim statusIndicator as Object
	statusIndicator = ThisComponent.getCurrentController.StatusIndicator
	statusIndicator.Start("Конвертация переносов, подождите",10)
	convertHyphInText(ThisComponent.Text)
'	Globalscope.BasicLibraries.LoadLibrary( "MRILib" )
	statusIndicator.Start("Конвертация переносов, подождите",70)
	allNotes = ThisComponent.FootNotes
	For x = 0 to allNotes.Count -1
	  aNote = allNotes.getByIndex(x)
	  convertHyphInText(aNote.Text)
	Next
	disableAutoHyph()
	statusIndicator.end()
End Sub

sub disableAutoHyph()
	Dim propertySetInfo As Object
	Dim oPositionOfMatch As Long
	oFamilies = ThisComponent.StyleFamilies
	sElements() = oFamilies.getElementNames()
	  oFamily = oFamilies.getByName(sElements(1))
	  For j = 0 to oFamily.getCount -1
	    oStyle = oFamily.getByIndex(j)
		propertySetInfo = oStyle.getPropertySetInfo()
	    If propertySetInfo.hasPropertyByName("ParaIsHyphenation") Then
	      oStyle.ParaIsHyphenation = false
	    EndIf
	  Next
End Sub

Sub convertHyphInText(textElement)
	Dim enum1Element As Object
	Dim enum1 As Object
	Dim i As Integer
	Dim cell As Object
	enum1 = textElement.createEnumeration()
	While enum1.hasMoreElements
		enum1Element = enum1.nextElement
		If enum1Element.supportsService("com.sun.star.text.Paragraph") Then
			convertParaHyphens(enum1Element)
		ElseIf enum1Element.supportsService("com.sun.star.text.TextTable") Then
			cellNames = enum1Element.cellNames
			For i = LBound(cellNames) To Ubound(cellNames)
				cell = enum1Element.getCellByName(cellNames(i))
				cellText = cell.getText()
				convertHyphInText(cellText)
		    Next i
		Else 
		EndIf
	Wend 
End Sub

Sub convertParaHyphens(para)
	Dim lineEnd As String
	'Globalscope.BasicLibraries.LoadLibrary( "MRILib" )
	vCurs = ThisComponent.currentController.getViewCursor()
	'Mri para
	vCurs.goToRange(para.Anchor,false)
	tCurs = vCurs.Text.createTextCursorByRange(vCurs)
	tCurs.goToStartOfParagraph(false)
	vCurs.goToRange(tCurs,false)
'	mri tCurs
	Do While NOT tCurs.isEndOfParagraph()
		vCurs.gotoEndOfLine(false)
		tCurs.goToRange(vCurs,false)
		If (tCurs.isEndOfParagraph()) Then
			Exit Do
		EndIf
		tCurs.goLeft(1,true)
		lastChar = tCurs.getString()
		tCurs.goRight(1,false)
		tCurs.goRight(1,true)
		newChar = tCurs.getString()
		tCurs.goLeft(1,false)
		If needHyphen(lastChar,newChar) Then
			tCurs.Text.insertControlCharacter(tCurs.End,com.sun.star.text.ControlCharacter.SOFT_HYPHEN,False)			
		EndIf
		tCurs.goRight(1,false)
		vCurs.goToRange(tCurs,false)
	Loop
'	mri vCurs

End sub

Function needHyphen(lastChar, newChar)
	needHyphen = true
	'MsgBox Asc(newChar)
	Select Case lastChar
		Case "."
			needHyphen = false
		Case "!"
			needHyphen = false
		Case "?"
			needHyphen = false
		Case "?"
			needHyphen = false
		Case " "
			needHyphen = false
		Case "-"
			needHyphen = false
		Case "­"
			needHyphen = false
	End Select
	Select Case newChar
		Case "."
			needHyphen = false
		Case "!"
			needHyphen = false
		Case "?"
			needHyphen = false
		Case "?"
			needHyphen = false
		Case " "
			needHyphen = false
		Case "-"
			needHyphen = false
		Case "­"
			needHyphen = false
		'newline U+000A
		Case Chr(10)
			needHyphen = false
	End Select
End Function
</script:module>

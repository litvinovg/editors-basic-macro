<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="pageHelpers" script:language="StarBasic" script:moduleType="normal">Sub removeEmptyPage

	Dim oViewCursor As Object
	oViewCursor = ThisComponent.CurrentController.getViewCursor()
	oViewCursor.jumpToStartOfPage()
	Dim oTextCursor As Object
	oTextCursor = oViewCursor.Text.createTextCursorByRange(oViewCursor)
	oViewCursor.jumpToEndOfPage()
	oViewCursor.goToRange(oTextCursor,true)
	
	If oViewCursor.isCollapsed Then
		oViewCursor.goLeft(1,false)
		SendRM()
	Else
		oViewCursor.jumpToEndOfPage()
		
	End If
	oViewCursor.collapseToEnd()

End Sub
Function findFirstPageWithStyle(pageStyleName)
	Dim oViewCursor As Object
	Dim curPage As String
	Dim prevPage As String
	oViewCursor = ThisComponent.CurrentController.getViewCursor()
	oViewCursor.jumpToFirstPage()
	curPage = oViewCursor.getPage()
	
	Do While curPage &lt;&gt; prevPage
		curStyleName = oViewCursor.PageStyleName
		If pageStyleName = curStyleName Then
			findFirstPageWithStyle = curPage
			Exit Function
		EndIf
		prevPage = curPage
		oViewCursor.jumpToNextPage()
		curPage = oViewCursor.getPage()
	Loop 
	findFirstPageWithStyle = -1
End Function



Sub createPageStyleByExample(newName)
	dim document   as object
	dim dispatcher as object
	document   = ThisComponent.CurrentController.Frame
	dispatcher = createUnoService("com.sun.star.frame.DispatchHelper")
	dim args1(1) as new com.sun.star.beans.PropertyValue
	args1(0).Name = "Param"
	args1(0).Value = newName
	args1(1).Name = "Family"
	args1(1).Value = 8
	dispatcher.executeDispatch(document, ".uno:StyleNewByExample", "", 0, args1())
end Sub

Function getPageNumber(cursor)
  Dim oField  'Field to insert
  oTextCursor =  cursor.Text.createTextCursorByRange(cursor.Start)
  oField = ThisComponent.createInstance("com.sun.star.text.textfield.PageNumber")
  oField.NumberingType = 4
  oField.SubType = com.sun.star.text.PageNumberType.CURRENT
  oTextCursor.Text.insertTextContent(oTextCursor, oField, False)
  getPageNumber = oField.getPresentation(false)
  oTextCursor.Text.removeTextContent(oField)
End Function 

Sub testPageNum
'  oViewCursor = ThisComponent.CurrentController.getViewCursor()
  updateUserField("fieldName","fieldValueXXX")
End Sub

Function updateUserField(fieldName,fieldValue)
  Dim oFieldMaster As Object
  Dim oMasters As Object
  oMasters = ThisComponent.getTextFieldMasters()
  If oMasters.hasByName("com.sun.star.text.FieldMaster.User" &amp; "." &amp; fieldName) Then
  	oFieldMaster = oMasters.getByName("com.sun.star.text.FieldMaster.User" &amp; "." &amp; fieldName)
  	oFieldMaster.Content = fieldValue
  EndIf
End Function 

Function insertUserField(cursor,fieldName,fieldValue)
  Dim oField  As Object 'Field to insert
  Dim oFieldMaster As Object
  Dim oMasters As Object
  oTextCursor =  cursor.Text.createTextCursorByRange(cursor.Start)
  oField = ThisComponent.createInstance("com.sun.star.text.textfield.User")
  oMasters = ThisComponent.getTextFieldMasters()
  If oMasters.hasByName("com.sun.star.text.FieldMaster.User" &amp; "." &amp; fieldName) Then
  	oFieldMaster = oMasters.getByName("com.sun.star.text.FieldMaster.User" &amp; "." &amp; fieldName)
	oFieldMaster.Name = fieldName
	oFieldMaster.Content = fieldValue
  Else 
	oFieldMaster = ThisComponent.createInstance("com.sun.star.text.FieldMaster.User")
	oFieldMaster.Name = fieldName
	oFieldMaster.Content = fieldValue
  EndIf
  oField.attachTextFieldMaster(oFieldMaster)
  oTextCursor.Text.insertTextContent(oTextCursor, oField, False)
End Function 


</script:module>

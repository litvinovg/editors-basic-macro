<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="CleanManualFormat" script:language="StarBasic">Sub markP1
End Sub

Sub NotesCleanStyle
	Dim oDescriptor 'The search descriptor
	dim dispatcher as Object
	dispatcher = createUnoService("com.sun.star.frame.DispatchHelper")
	dim document   as Object
	document   = ThisComponent.CurrentController.Frame
	Dim oViewCursor As Object 'View cursor
	oViewCursor = ThisComponent.CurrentController.getViewCursor()
	allNotes= thisComponent.FootNotes
	for x = 0 to allNotes.Count -1
	  aNote = allNotes.getByIndex(x)
	  aNote.Anchor.CharStyleName="Footnote anchor"
	  oEnum = aNote.Text.createEnumeration()
	  Do While oEnum.hasMoreElements()
	    oCurPar = oEnum.nextElement()
	    oCurPar.ParaStyleName = "Footnote"
	  Loop
	Next
End Sub


Sub getAttINfo
	Dim oViewCursor As Object
	Dim oText
	Dim oTextCursor
	oViewCursor = ThisComponent.CurrentController.getViewCursor()
	oTextCursor = oViewCursor.Text.createTextCursorByRange(oViewCursor)
	MsgBox "CharKerning " &amp; oTextCursor.CharKerning
	'MsgBox "CharBackTransparent " &amp; oTextCursor.CharBackTransparent
End Sub


Sub ReplaceFormatting(SearchString,oReplaceString,SrchAttributes,ReplAttributes, searchStyles)
	Dim oReplace
	oReplace = ThisComponent.createReplaceDescriptor()
	oReplace.SearchString = SearchString
	oReplace.ReplaceString = oReplaceString
	oReplace.SearchRegularExpression=True
	oReplace.SearchCaseSensitive = True
	
	oReplace.searchAll=True
	If Not IsEmpty(SrchAttributes(0).Value) Then
	  oReplace.SetSearchAttributes(SrchAttributes())
	  oReplace.searchStyles = searchStyles
	End If
	If Not IsEmpty(ReplAttributes(0).Value) Then
	  oReplace.SetReplaceAttributes(ReplAttributes())
	End If
	ThisComponent.replaceAll(oReplace)
End Sub


'Replaces manual formatting text with font into character style with assigned font
Sub executeReplaceFonts
	Dim oDoc
	oDoc = Thiscomponent
	Dim srch(0) as new com.sun.star.beans.PropertyValue
	SDesc = Thiscomponent.createSearchDescriptor()
	  SDesc.SearchAll = true
	  SDesc.ValueSearch = false
	  SDesc.SearchStyles = false 
	  SDesc.SearchRegularExpression = false
	  SDesc.SearchString = "" 
	  srch(0).Name = "CharFontName"
	  SDesc.SetSearchAttributes(srch())
	  founds = Thiscomponent.findFirst(SDesc)
	  do while not isNull(founds)
	    curFont = founds.CharFontName
	    If curFont &lt;&gt; "IPH Serif" AND curFont &lt;&gt; "" Then
	      If Not DocHasCharStyle(oDoc,curFont) Then
	        oProps() = Array(CreateProperty("CharFontName", curFont))
	        CreateCharacterStyle(curFont, oProps())
	      End If
	      founds.CharStyleNames = Array(curFont)
	    End If
	    founds = Thiscomponent.findNext(founds.getend, SDesc)
	  loop
End Sub

Sub replaceFontToStyle(fontName As String)
	Dim SrchAttributes(0) as new com.sun.star.beans.PropertyValue
	Dim ReplAttributes(0) as new com.sun.star.beans.PropertyValue
	SrchAttributes(0).Name = "CharFontName"
	SrchAttributes(0).Value = fontName
	ReplAttributes(0).Name = "CharStyleName"
	ReplAttributes(0).Value = fontName
	srchString = "(.*)"
	repString = "$1"
	ReplaceFormatting(srchString,repString,SrchAttributes,ReplAttributes)
End Sub


Function CreateProperty( Optional cName As String, Optional uValue ) As com.sun.star.beans.PropertyValue
	Dim oPropertyValue As New com.sun.star.beans.PropertyValue
	If Not IsMissing( cName ) Then
	  oPropertyValue.Name = cName
	EndIf
	If Not IsMissing( uValue ) Then
	  oPropertyValue.Value = uValue
	EndIf
	CreateProperty() = oPropertyValue
End Function

Function DocHasCharStyle(oDoc, sName$) As Boolean
	Dim oStyles
	oStyles = oDoc.StyleFamilies.getByName("CharacterStyles")
	DocHasCharStyle() = oStyles.hasByName(sName)
End Function

Sub CreateCharacterStyle(sStyleName$, oProps())
	Dim i%
	Dim oFamilies
	Dim oStyle
	Dim oStyles
	oFamilies = ThisComponent.StyleFamilies
	oStyles = oFamilies.getByName("CharacterStyles")
	If oStyles.HasByName(sStyleName) Then
	  Exit Sub
	End If
	oStyle = ThisComponent.createInstance("com.sun.star.style.CharacterStyle")
	For i=LBound(oProps) To UBound(oProps)
	  oStyle.setPropertyValue(oProps(i).Name, oProps(i).Value)
	Next
	oStyles.insertByName(sStyleName, oStyle)
End Sub

Sub ClearDirectFormat
	Dim oDescriptor 'The search descriptor
	dim dispatcher as Object
	dispatcher = createUnoService("com.sun.star.frame.DispatchHelper")
	dim document   as Object
	document   = ThisComponent.CurrentController.Frame
	Dim oViewCursor As Object 'View cursor
	oViewCursor = ThisComponent.CurrentController.getViewCursor()
	oViewCursor.gotoStart(false)
	oViewCursor.gotoEnd(true)
	dispatcher.executeDispatch(document, ".uno:ResetAttributes", "", 0, Array())
	footNotes = thisComponent.Footnotes
	For x = 0 to footNotes.Count -1
	  aNote = footNotes.getByIndex(x)
	  footNoteText = aNote.getText()
	  oTextcursor = footNoteText.createTextCursor()
	  oViewCursor.gotoRange(oTextcursor.getStart(),false) 
	  oViewCursor.gotoEnd(true)
	  dispatcher.executeDispatch(document, ".uno:ResetAttributes", "", 0, Array())
	Next
	endNotes = thisComponent.Endnotes
	for x = 0 to endNotes.Count -1
	  aNote = endNotes.getByIndex(x)
	  endNoteText = aNote.getText()
	  oTextcursor = endNoteText.createTextCursor()
	  oViewCursor.gotoRange(oTextcursor.getStart(),false) 
	  oViewCursor.gotoEnd(true)
	  dispatcher.executeDispatch(document, ".uno:ResetAttributes", "", 0, Array())
	next
	
	oViewCursor.gotoStart(false)
End Sub

sub replaceBaseToStandard
	dim document   as Object
	dim dispatcher as object
	document   = ThisComponent.CurrentController.Frame
	dispatcher = createUnoService("com.sun.star.frame.DispatchHelper")
	dim args1(21) as new com.sun.star.beans.PropertyValue
	args1(0).Name = "SearchItem.StyleFamily"
	args1(0).Value = 2
	args1(1).Name = "SearchItem.CellType"
	args1(1).Value = 0
	args1(2).Name = "SearchItem.RowDirection"
	args1(2).Value = true
	args1(3).Name = "SearchItem.AllTables"
	args1(3).Value = false
	args1(4).Name = "SearchItem.SearchFiltered"
	args1(4).Value = false
	args1(5).Name = "SearchItem.Backward"
	args1(5).Value = false
	args1(6).Name = "SearchItem.Pattern"
	args1(6).Value = true
	args1(7).Name = "SearchItem.Content"
	args1(7).Value = false
	args1(8).Name = "SearchItem.AsianOptions"
	args1(8).Value = false
	args1(9).Name = "SearchItem.AlgorithmType"
	args1(9).Value = 0
	args1(10).Name = "SearchItem.SearchFlags"
	args1(10).Value = 65536
	args1(11).Name = "SearchItem.SearchString"
	args1(11).Value = "Базовый"
	args1(12).Name = "SearchItem.ReplaceString"
	args1(12).Value = "Основной текст"
	args1(13).Name = "SearchItem.Locale"
	args1(13).Value = 255
	args1(14).Name = "SearchItem.ChangedChars"
	args1(14).Value = 2
	args1(15).Name = "SearchItem.DeletedChars"
	args1(15).Value = 2
	args1(16).Name = "SearchItem.InsertedChars"
	args1(16).Value = 2
	args1(17).Name = "SearchItem.TransliterateFlags"
	args1(17).Value = 1280
	args1(18).Name = "SearchItem.Command"
	args1(18).Value = 3
	args1(19).Name = "SearchItem.SearchFormatted"
	args1(19).Value = false
	args1(20).Name = "SearchItem.AlgorithmType2"
	args1(20).Value = 1
	args1(21).Name = "Quiet"
	args1(21).Value = true
	dispatcher.executeDispatch(document, ".uno:ExecuteSearch", "", 0, args1())
end Sub

</script:module>
